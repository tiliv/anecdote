!(async function(){const e=document.getElementById("status"),t=document.getElementById("manifest"),n=document.getElementById("open"),a=document.getElementById("reload"),i="{{ site.url }}",r=i+"/.well-known/manifest.json",s=i+"/.well-known/manifest.sig";async function o(e){const t=await fetch(e,{cache:"no-store",credentials:"omit",mode:"cors"});if(!t.ok)throw new Error("fetch failed: "+t.status);return await t.text()}async function c(){try{e.textContent="fetching manifest + signature…";const[a,i]=await Promise.all([o(r),o(s)]),c=(new TextEncoder).encode(a),l=Uint8Array.from(atob(i.trim()),e=>e.charCodeAt(0)),d=await(async function(){const e=(function(e){const t=atob(e),n=t.length,a=new Uint8Array(n);for(let e=0;e<n;e++)a[e]=t.charCodeAt(e);return a.buffer})("{% include public.b64 %}");return crypto.subtle.importKey("spki",e,{name:"ECDSA",namedCurve:"P-256"},0,["verify"])})();return await crypto.subtle.verify({name:"RSA-PSS",saltLength:32},d,l,c)?(e.innerHTML='<span class="ok">Signature valid — manifest verified.</span>',t.style.display="block",t.textContent=a,n.disabled=0,1):(e.innerHTML='<span class="bad">Signature invalid — do not trust this site.</span>',n.disabled=1,t.style.display="none",0)}catch(a){throw e.innerHTML='<span class="bad">Error verifying manifest: '+String(a)+"</span>",n.disabled=1,t.style.display="none",a}}n.addEventListener("click",()=>{const e=document.createElement("a");e.href=i+"/",e.target="_blank",e.rel="noopener noreferrer",e.click()}),a.addEventListener("click",()=>c()),await c()})();