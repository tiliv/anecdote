# This default workflow has been modified:
# 1) jobs:build:container: is a Jekyll-specific container so we can run the
#    Jekyll build commands from bin scripts.
# 2) jobs:build:steps: the steps omit the jekyll action because it is in the
#    container.
# 3) bin/build.sh does all the work to make _site ready.

# Sample workflow for building and deploying a Jekyll site to GitHub Pages
name: Build and Deploy

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    environment:
      name: github-pages
    runs-on: ubuntu-latest
    container: ghcr.io/actions/jekyll-build-pages:latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v5
      - uses: actions/configure-pages@v5
      - run: npm install
      - run: bin/build.sh
      - run: bin/sign-manifest.js
        env:
          PRIVATE_PEM: ${{ secrets.PRIVATE_PEM }}
      - uses: actions/upload-pages-artifact@v3

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
